Credit Problem Set
Luhn Algorithm

1. Multiply every other digit by 2, starting with the number’s second-to-last digit, and then add those products’ digits together.
2. Add the sum to the sum of the digits that weren’t multiplied by 2.
3. If the total’s last digit is 0 (or, put more formally, if the total modulo 10 is congruent to 0), the number is valid

e.g 
4003600000000014 credit number
1. Multiply every other digit by 2
So we take  number 4,0,6,0,0,0,0,1 and times it by 2
1•2 + 0•2 + 0•2 + 0•2 + 0•2 + 6•2 + 0•2 + 4•2
so:
2+0+0+0+12+0+8
we need to add the number together, so if a number is 10 or above e.g 19,  we need to seperate it (1+9)
so:
2+0+0+1+2+0+8 = 13

2. Add the sum to the sum of the digits that weren’t multiplied by 2.
so 13+ 4 + 0 + 0 + 0 + 0 + 0 + 3 + 0 = 20
3.If the total’s last digit is 0 (or, put more formally, if the total modulo 10 is congruent to 0), the number is valid
because the last digit is 0 (from 20), the number is valid.

The next validation is to differantiate which card is from which company, either its from American Express, Visa, Mastsercard, or invalid
American Express uses 15 digit numbers, and starts with number 34 or 37
Visa uses 13 and 16 digit numbers, and starts with number 4
Mastercard uses 16 digit number, and starts with numbers 51, 52, 53, 54, or 55 (they also have some other potential starting numbers which we won’t concern ourselves with for this problem)

Solution for luhn algorithm:
Modular operation is the main thing that we can use to tackle this program (operation that lets us get the "Remainder number" from a division, e.g 12/5 = we got 2 as the remainder number, 12%5 = 2 )
For example, we want to multiply every other digit by 2, starting with the number's second to last digit
firstly we need to divide the number 4003600000000014 by 10 so that we can remove the last digit, into 400360000000001
we can use loop do while to get the every number that we need
so: 400360000000001 is the credit number,
we can modular it by 10 so 400360000000001 % 10 = 1
so we get the last digit, and then we need the  2 digit before the number 1.
to do this we can divide the number 400360000000001 by 100 and save the number as an int so we dont get any comma
then we get number 4003600000000 after we divide it by 100, we modular it again by 10 to get 4003600000000%10 = 0,
and it will keep on looping until the number is less than 100.
after that multiply all number and add all number
BUT if the digit after multiply is more than 10 (2 digit) we need to "seperate them" so if its 10, it'll be 1+0
for this problem, i like to modular all digit that i get AND divide it by 10 and add them all, so it will look like this: (digit%10) + (digit/10)
so for example we have the number 10 : (10%10) = 0 ; (10/10) = 1 because i save it as an integer so there's no comma, so we get 1+10




src: https://cs50.harvard.edu/x/2022/psets/1/credit/
